name: Test SDK

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  PYTHON: 3.7.12
  POETRY: 1.1.12
  UNIT_TEST_REPORT: unit-test-report.xml
  SDK_TEST_REPORT_PYTHON_3_6: sdk-test-report-python3_6.xml
  SDK_TEST_REPORT_PYTHON_3_7: sdk-test-report-python3_7.xml
  SDK_TEST_REPORT_PYTHON_3_8: sdk-test-report-python3_8.xml
  SDK_TEST_REPORT_PYTHON_3_9: sdk-test-report-python3_9.xml
  SDK_TEST_REPORT_PYTHON_3_10: sdk-test-report-python3_10.xml

concurrency:
  group: cord-client-${{ github.ref }}-test
  cancel-in-progress: true

jobs:
  unit-tests-python-3-6:
    name: Run unit tests for Python 3.6
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Run unit tests for Python 3.6
        uses: ./.github/actions/run-unit-tests
        with:
          python-version: 3.6.15
          test-report-file: ${{ env.SDK_TEST_REPORT_PYTHON_3_6 }}

  unit-tests-python-3-7:
    name: Run unit tests for Python 3.7
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Run unit tests for Python 3.7
        uses: ./.github/actions/run-unit-tests
        with:
          python-version: 3.7.12
          test-report-file: ${{ env.SDK_TEST_REPORT_PYTHON_3_7 }}

  unit-tests-python-3-8:
    name: Run unit tests for Python 3.8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Run unit tests for Python 3.8
        uses: ./.github/actions/run-unit-tests
        with:
          python-version: 3.8.12
          test-report-file: ${{ env.SDK_TEST_REPORT_PYTHON_3_8 }}

  unit-tests-python-3-9:
    name: Run unit tests for Python 3.9
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Run unit tests for Python 3.9
        uses: ./.github/actions/run-unit-tests
        with:
          python-version: 3.9.10
          test-report-file: ${{ env.SDK_TEST_REPORT_PYTHON_3_9 }}

  unit-tests-python-3-10:
    name: Run unit tests for Python 3.10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Run unit tests for Python 3.10
        uses: ./.github/actions/run-unit-tests
        with:
          python-version: 3.10.2
          test-report-file: ${{ env.SDK_TEST_REPORT_PYTHON_3_10 }}


  sdk-tests:
    name: Run SDK tests
    runs-on: ubuntu-latest
    env:
      BACKEND_REPO: cord-team/cord-backend
      PROJECT: sdk-integration-tests
      PRIVATE_KEY: ${{ secrets.SDK_TESTS_PRIVATE_KEY }}
      TEST_DIR: ./src/cord/sdk_integration_tests/tests
      ENVIRONMENT: DEV
    steps:
      - name: Checkout backend repo
        uses: actions/checkout@v2
        with:
          repository: ${{ env.BACKEND_REPO }}
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Setup Poetry environment
        uses: ./.github/actions/setup-poetry-environment
        with:
          project: ${{ env.PROJECT }}
          cache-key: sdk-${{ hashFiles('projects/sdk-integration-tests/poetry.lock') }}-1

      - name: Setup FFMPEG
        uses: FedericoCarboni/setup-ffmpeg@v1

      - name: Get SDK
        run: |
          cd projects/${{ env.PROJECT }}
          python -m pip install --upgrade pip
          GIT_REPO=${{ github.repositoryUrl }}
          poetry add git+"${GIT_REPO/"git:"/"https:"}"
          poetry install

      - name: Run tests
        run: |
          cd projects/${{ env.PROJECT }}
          source .venv/bin/activate
          export CORD_ENV=${{ env.ENVIRONMENT }}
          export PRIVATE_KEY="${{ env.PRIVATE_KEY }}"
          python -m pytest ${{ env.TEST_DIR }} --rootdir=${{ env.TEST_DIR }} --verbose --junitxml=${{ env.SDK_TEST_REPORT }}

      - name: Upload report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ env.SDK_TEST_REPORT }}
          path: projects/${{ env.PROJECT }}/${{ env.SDK_TEST_REPORT }}

  publish-test-reports:
      name: Publish test reports
      runs-on: ubuntu-latest
      needs: [
        unit-tests-python-3-6, 
        unit-tests-python-3-7, 
        unit-tests-python-3-8, 
        unit-tests-python-3-9, 
        unit-tests-python-3-10, 
        sdk-tests]
      if: success() || failure()

      steps:
        - name: Download unit test report Python 3.6
          uses: actions/download-artifact@v2
          with:
            name: ${{ env.UNIT_TEST_REPORT_PYTHON_3_6 }}
            path: ${{ env.UNIT_TEST_REPORT_PYTHON_3_6 }}

        - name: Download unit test report Python 3.7
          uses: actions/download-artifact@v2
          with:
            name: ${{ env.UNIT_TEST_REPORT_PYTHON_3_7 }}
            path: ${{ env.UNIT_TEST_REPORT_PYTHON_3_7 }}

        - name: Download unit test report Python 3.8
          uses: actions/download-artifact@v2
          with:
            name: ${{ env.UNIT_TEST_REPORT_PYTHON_3_8 }}
            path: ${{ env.UNIT_TEST_REPORT_PYTHON_3_8 }}

        - name: Download unit test report Python 3.9
          uses: actions/download-artifact@v2
          with:
            name: ${{ env.UNIT_TEST_REPORT_PYTHON_3_9 }}
            path: ${{ env.UNIT_TEST_REPORT_PYTHON_3_9 }}

        - name: Download unit test report Python 3.10
          uses: actions/download-artifact@v2
          with:
            name: ${{ env.UNIT_TEST_REPORT_PYTHON_3_10 }}
            path: ${{ env.UNIT_TEST_REPORT_PYTHON_3_10 }}

        - name: Download SDK integration test report
          uses: actions/download-artifact@v2
          with:
            name: ${{ env.SDK_TEST_REPORT }}
            path: ${{ env.SDK_TEST_REPORT }}

        - name: Publish unit test report Python 3.6
          uses: EnricoMi/publish-unit-test-result-action@v1
          with:
            files: ${{ env.UNIT_TEST_REPORT_PYTHON_3_6 }}/*.xml
            check_name: Unit test report

        - name: Publish unit test report Python 3.7
          uses: EnricoMi/publish-unit-test-result-action@v1
          with:
            files: ${{ env.UNIT_TEST_REPORT_PYTHON_3_7 }}/*.xml
            check_name: Unit test report

        - name: Publish unit test report Python 3.8
          uses: EnricoMi/publish-unit-test-result-action@v1
          with:
            files: ${{ env.UNIT_TEST_REPORT_PYTHON_3_8 }}/*.xml
            check_name: Unit test report

        - name: Publish unit test report Python 3.9
          uses: EnricoMi/publish-unit-test-result-action@v1
          with:
            files: ${{ env.UNIT_TEST_REPORT_PYTHON_3_9 }}/*.xml
            check_name: Unit test report

        - name: Publish unit test report Python 3.10
          uses: EnricoMi/publish-unit-test-result-action@v1
          with:
            files: ${{ env.UNIT_TEST_REPORT_PYTHON_3_10 }}/*.xml
            check_name: Unit test report

        - name: Publish SDK integration test report
          uses: EnricoMi/publish-unit-test-result-action@v1
          with:
            files: ${{ env.SDK_TEST_REPORT }}/*.xml
            check_name: SDK integration test report

  send-slack-notification:
    name: Send notification
    runs-on: ubuntu-latest
    needs: [ publish-test-reports ]
    if: always()
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get workflow status
        uses: technote-space/workflow-conclusion-action@v2

      - name: Send Slack notification
        uses: ./.github/actions/send-slack-notification
        with:
          success-parameter: ${{ env.WORKFLOW_CONCLUSION }}
          failure-channel: ${{ secrets.SLACK_FAILURE_CHANNEL_ID }}
          failure-message: This pipeline has failed!